/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.grammatech.cs;

public class ast_field {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ast_field(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ast_field obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csJNI.delete_ast_field(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected static long getCPtrAndDisown(ast_field obj) {
    if (obj != null) obj.swigCMemOwn= false;
    return getCPtr(obj);
  }

  public ast_field(ast_ordinal ord, ast val) throws result {
    this(csJNI.new_ast_field__SWIG_0(ast_ordinal.getCPtr(ord), ord, ast.getCPtr(val), val), true);
  }

  public ast_field(ast_ordinal ord, ast_class val) throws result {
    this(csJNI.new_ast_field__SWIG_1(ast_ordinal.getCPtr(ord), ord, ast_class.getCPtr(val), val), true);
  }

  public ast_field(ast_ordinal ord, boolean val) throws result {
    this(csJNI.new_ast_field__SWIG_2(ast_ordinal.getCPtr(ord), ord, val), true);
  }

  public ast_field(ast_ordinal ord, String val) throws result {
    this(csJNI.new_ast_field__SWIG_3(ast_ordinal.getCPtr(ord), ord, val), true);
  }

  public ast_field(ast_field f) throws result {
    this(csJNI.new_ast_field__SWIG_4(ast_field.getCPtr(f), f), true);
  }

  public ast_field(ast_ordinal ord, symbol val) throws result {
    this(csJNI.new_ast_field__SWIG_5(ast_ordinal.getCPtr(ord), ord, symbol.getCPtr(val), val), true);
  }

  public ast_ordinal ordinal() throws result {
    return new ast_ordinal(csJNI.ast_field_ordinal(swigCPtr, this), true);
  }

  public ast_field_type get_type() throws result {
    return new ast_field_type(csJNI.ast_field_get_type(swigCPtr, this), true);
  }

  public ast as_ast() throws result {
    return new ast(csJNI.ast_field_as_ast(swigCPtr, this), true);
  }

  public ast_class as_ast_class() throws result {
    return new ast_class(csJNI.ast_field_as_ast_class(swigCPtr, this), true);
  }

  public boolean as_boolean() throws result {
    return csJNI.ast_field_as_boolean(swigCPtr, this);
  }

  public int as_enum_value_int32() throws result {
    return csJNI.ast_field_as_enum_value_int32(swigCPtr, this);
  }

  public String as_enum_value_string() throws result {
    return csJNI.ast_field_as_enum_value_string(swigCPtr, this);
  }

  public byte as_int8() throws result {
    return csJNI.ast_field_as_int8(swigCPtr, this);
  }

  public short as_uint8() throws result {
    return csJNI.ast_field_as_uint8(swigCPtr, this);
  }

  public short as_int16() throws result {
    return csJNI.ast_field_as_int16(swigCPtr, this);
  }

  public int as_uint16() throws result {
    return csJNI.ast_field_as_uint16(swigCPtr, this);
  }

  public int as_int32() throws result {
    return csJNI.ast_field_as_int32(swigCPtr, this);
  }

  public long as_uint32() throws result {
    return csJNI.ast_field_as_uint32(swigCPtr, this);
  }

  public long as_int64() throws result {
    return csJNI.ast_field_as_int64(swigCPtr, this);
  }

  public java.math.BigInteger as_uint64() throws result {
    return csJNI.ast_field_as_uint64(swigCPtr, this);
  }

  public float as_flt32() throws result {
    return csJNI.ast_field_as_flt32(swigCPtr, this);
  }

  public double as_flt64() throws result {
    return csJNI.ast_field_as_flt64(swigCPtr, this);
  }

  public String as_str() throws result {
    return csJNI.ast_field_as_str(swigCPtr, this);
  }

  public symbol as_symbol() throws result {
    return new symbol(csJNI.ast_field_as_symbol(swigCPtr, this), true);
  }

  public static ast_field from_int8(ast_ordinal ord, byte v) throws result {
    return new ast_field(csJNI.ast_field_from_int8(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public static ast_field from_uint8(ast_ordinal ord, short v) throws result {
    return new ast_field(csJNI.ast_field_from_uint8(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public static ast_field from_int16(ast_ordinal ord, short v) throws result {
    return new ast_field(csJNI.ast_field_from_int16(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public static ast_field from_uint16(ast_ordinal ord, int v) throws result {
    return new ast_field(csJNI.ast_field_from_uint16(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public static ast_field from_int32(ast_ordinal ord, int v) throws result {
    return new ast_field(csJNI.ast_field_from_int32(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public static ast_field from_uint32(ast_ordinal ord, long v) throws result {
    return new ast_field(csJNI.ast_field_from_uint32(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public static ast_field from_int64(ast_ordinal ord, long v) throws result {
    return new ast_field(csJNI.ast_field_from_int64(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public static ast_field from_uint64(ast_ordinal ord, java.math.BigInteger v) throws result {
    return new ast_field(csJNI.ast_field_from_uint64(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public static ast_field from_float(ast_ordinal ord, float v) throws result {
    return new ast_field(csJNI.ast_field_from_float(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public static ast_field from_double(ast_ordinal ord, double v) throws result {
    return new ast_field(csJNI.ast_field_from_double(ast_ordinal.getCPtr(ord), ord, v), true);
  }

  public ast_field get(ast_ordinal ord) throws result {
    return new ast_field(csJNI.ast_field_get__SWIG_0(swigCPtr, this, ast_ordinal.getCPtr(ord), ord), true);
  }

  public ast_field get(long ord) throws result {
    return new ast_field(csJNI.ast_field_get__SWIG_1(swigCPtr, this, ord), true);
  }

  public boolean has_field(ast_ordinal ord) throws result {
    return csJNI.ast_field_has_field__SWIG_0(swigCPtr, this, ast_ordinal.getCPtr(ord), ord);
  }

  public boolean has_field(long ord) throws result {
    return csJNI.ast_field_has_field__SWIG_1(swigCPtr, this, ord);
  }

  public long num_fields() throws result {
    return csJNI.ast_field_num_fields(swigCPtr, this);
  }

  public String as_string() throws result {
    return csJNI.ast_field_as_string(swigCPtr, this);
  }

  public String toString() {
    return csJNI.ast_field_toString(swigCPtr, this);
  }

  public int hashCode() {
    return csJNI.ast_field_hashCode(swigCPtr, this);
  }

}
