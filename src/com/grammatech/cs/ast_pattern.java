/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.grammatech.cs;

public class ast_pattern {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ast_pattern(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ast_pattern obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csJNI.delete_ast_pattern(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected static long getCPtrAndDisown(ast_pattern obj) {
    if (obj != null) obj.swigCMemOwn= false;
    return getCPtr(obj);
  }

  public ast_pattern(String pattern) throws ast_pattern_compilation_error {
    this(csJNI.new_ast_pattern__SWIG_0(pattern), true);
  }

  public ast_pattern(ast_pattern rhs) throws ast_pattern_compilation_error {
    this(csJNI.new_ast_pattern__SWIG_1(ast_pattern.getCPtr(rhs), rhs), true);
  }

  public boolean match(ast node) throws result {
    return csJNI.ast_pattern_match(swigCPtr, this, ast.getCPtr(node), node);
  }

  public ast_bindings match_with_bindings(ast node) throws result {
    return new ast_bindings(csJNI.ast_pattern_match_with_bindings(swigCPtr, this, ast.getCPtr(node), node), true);
  }

  public String as_string() throws result {
    return csJNI.ast_pattern_as_string(swigCPtr, this);
  }

  public String toString() {
    return csJNI.ast_pattern_toString(swigCPtr, this);
  }

}
