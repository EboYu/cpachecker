/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.grammatech.cs;

public class point_syntax_kind implements Comparable<point_syntax_kind> {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected point_syntax_kind(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(point_syntax_kind obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csJNI.delete_point_syntax_kind(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected static long getCPtrAndDisown(point_syntax_kind obj) {
    if (obj != null) obj.swigCMemOwn= false;
    return getCPtr(obj);
  }

  public point_syntax_kind(long _inner) throws result {
    this(csJNI.new_point_syntax_kind(_inner), true);
  }

  public int compareTo(point_syntax_kind other) {
    return csJNI.point_syntax_kind_compareTo(swigCPtr, this, point_syntax_kind.getCPtr(other), other);
  }

  public boolean equals(point_syntax_kind other) throws result {
    return csJNI.point_syntax_kind_equals(swigCPtr, this, point_syntax_kind.getCPtr(other), other);
  }

  public int hashCode() {
    return csJNI.point_syntax_kind_hashCode(swigCPtr, this);
  }

  public String as_string() throws result {
    return csJNI.point_syntax_kind_as_string(swigCPtr, this);
  }

  public String toString() {
    return csJNI.point_syntax_kind_toString(swigCPtr, this);
  }

  public String name() throws result {
    return csJNI.point_syntax_kind_name(swigCPtr, this);
  }

  public static point_syntax_kind getNONE() throws result {
    long cPtr = csJNI.point_syntax_kind_NONE_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getIF() throws result {
    long cPtr = csJNI.point_syntax_kind_IF_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getELSE() throws result {
    long cPtr = csJNI.point_syntax_kind_ELSE_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getSWITCH() throws result {
    long cPtr = csJNI.point_syntax_kind_SWITCH_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getCASE() throws result {
    long cPtr = csJNI.point_syntax_kind_CASE_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getWHILE() throws result {
    long cPtr = csJNI.point_syntax_kind_WHILE_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getDO() throws result {
    long cPtr = csJNI.point_syntax_kind_DO_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getFOR() throws result {
    long cPtr = csJNI.point_syntax_kind_FOR_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getCONTINUE() throws result {
    long cPtr = csJNI.point_syntax_kind_CONTINUE_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getBREAK() throws result {
    long cPtr = csJNI.point_syntax_kind_BREAK_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getGOTO() throws result {
    long cPtr = csJNI.point_syntax_kind_GOTO_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getLABEL() throws result {
    long cPtr = csJNI.point_syntax_kind_LABEL_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getRETURN() throws result {
    long cPtr = csJNI.point_syntax_kind_RETURN_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getTHROW() throws result {
    long cPtr = csJNI.point_syntax_kind_THROW_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getTRY() throws result {
    long cPtr = csJNI.point_syntax_kind_TRY_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getCATCH() throws result {
    long cPtr = csJNI.point_syntax_kind_CATCH_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

  public static point_syntax_kind getASM() throws result {
    long cPtr = csJNI.point_syntax_kind_ASM_get();
    return (cPtr == 0) ? null : new point_syntax_kind(cPtr, false);
  }

}
