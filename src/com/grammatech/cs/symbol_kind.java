/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.grammatech.cs;

public class symbol_kind implements Comparable<symbol_kind> {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected symbol_kind(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(symbol_kind obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csJNI.delete_symbol_kind(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected static long getCPtrAndDisown(symbol_kind obj) {
    if (obj != null) obj.swigCMemOwn= false;
    return getCPtr(obj);
  }

  public symbol_kind(long _inner) throws result {
    this(csJNI.new_symbol_kind(_inner), true);
  }

  public int compareTo(symbol_kind other) {
    return csJNI.symbol_kind_compareTo(swigCPtr, this, symbol_kind.getCPtr(other), other);
  }

  public boolean equals(symbol_kind other) throws result {
    return csJNI.symbol_kind_equals(swigCPtr, this, symbol_kind.getCPtr(other), other);
  }

  public int hashCode() {
    return csJNI.symbol_kind_hashCode(swigCPtr, this);
  }

  public String as_string() throws result {
    return csJNI.symbol_kind_as_string(swigCPtr, this);
  }

  public String toString() {
    return csJNI.symbol_kind_toString(swigCPtr, this);
  }

  public String name() throws result {
    return csJNI.symbol_kind_name(swigCPtr, this);
  }

  public static symbol_kind getUSER() throws result {
    long cPtr = csJNI.symbol_kind_USER_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getINTERMEDIATE() throws result {
    long cPtr = csJNI.symbol_kind_INTERMEDIATE_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getPARAM() throws result {
    long cPtr = csJNI.symbol_kind_PARAM_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getRETURN() throws result {
    long cPtr = csJNI.symbol_kind_RETURN_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getRESULT() throws result {
    long cPtr = csJNI.symbol_kind_RESULT_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getHEAP() throws result {
    long cPtr = csJNI.symbol_kind_HEAP_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getSTRING() throws result {
    long cPtr = csJNI.symbol_kind_STRING_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getFUNCTION() throws result {
    long cPtr = csJNI.symbol_kind_FUNCTION_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getLABEL() throws result {
    long cPtr = csJNI.symbol_kind_LABEL_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getINTERNAL() throws result {
    long cPtr = csJNI.symbol_kind_INTERNAL_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

  public static symbol_kind getSUBOBJ() throws result {
    long cPtr = csJNI.symbol_kind_SUBOBJ_get();
    return (cPtr == 0) ? null : new symbol_kind(cPtr, false);
  }

}
