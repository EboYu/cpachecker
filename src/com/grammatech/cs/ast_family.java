/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.grammatech.cs;

public class ast_family implements Comparable<ast_family> {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ast_family(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ast_family obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csJNI.delete_ast_family(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected static long getCPtrAndDisown(ast_family obj) {
    if (obj != null) obj.swigCMemOwn= false;
    return getCPtr(obj);
  }

  public ast_family(long _inner) throws result {
    this(csJNI.new_ast_family(_inner), true);
  }

  public int compareTo(ast_family other) {
    return csJNI.ast_family_compareTo(swigCPtr, this, ast_family.getCPtr(other), other);
  }

  public boolean equals(ast_family other) throws result {
    return csJNI.ast_family_equals(swigCPtr, this, ast_family.getCPtr(other), other);
  }

  public int hashCode() {
    return csJNI.ast_family_hashCode(swigCPtr, this);
  }

  public String as_string() throws result {
    return csJNI.ast_family_as_string(swigCPtr, this);
  }

  public String toString() {
    return csJNI.ast_family_toString(swigCPtr, this);
  }

  public String name() throws result {
    return csJNI.ast_family_name(swigCPtr, this);
  }

  public static ast_family getC_NORMALIZED() throws result {
    long cPtr = csJNI.ast_family_C_NORMALIZED_get();
    return (cPtr == 0) ? null : new ast_family(cPtr, false);
  }

  public static ast_family getC_UNNORMALIZED() throws result {
    long cPtr = csJNI.ast_family_C_UNNORMALIZED_get();
    return (cPtr == 0) ? null : new ast_family(cPtr, false);
  }

}
