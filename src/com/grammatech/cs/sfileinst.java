/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.grammatech.cs;

public class sfileinst implements Comparable<sfileinst> {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected sfileinst(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(sfileinst obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csJNI.delete_sfileinst(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected static long getCPtrAndDisown(sfileinst obj) {
    if (obj != null) obj.swigCMemOwn= false;
    return getCPtr(obj);
  }

  public int compareTo(sfileinst other) {
    return csJNI.sfileinst_compareTo(swigCPtr, this, sfileinst.getCPtr(other), other);
  }

  public int hashCode() {
    return csJNI.sfileinst_hashCode(swigCPtr, this);
  }

  public boolean equals(sfileinst other) throws result {
    return csJNI.sfileinst_equals(swigCPtr, this, sfileinst.getCPtr(other), other);
  }

  public String name() throws result {
    return csJNI.sfileinst_name(swigCPtr, this);
  }

  public String normalized_name() throws result {
    return csJNI.sfileinst_normalized_name(swigCPtr, this);
  }

  public sfileinst_vector include_tree_path() throws result {
    return new sfileinst_vector(csJNI.sfileinst_include_tree_path(swigCPtr, this), true);
  }

  public String read(long line_start, long col_start, long line_end, long col_end, long limit) throws result {
    return csJNI.sfileinst_read__SWIG_0(swigCPtr, this, line_start, col_start, line_end, col_end, limit);
  }

  public String read(long line_start, long col_start, long line_end, long col_end) throws result {
    return csJNI.sfileinst_read__SWIG_1(swigCPtr, this, line_start, col_start, line_end, col_end);
  }

  public long line_count() throws result {
    return csJNI.sfileinst_line_count(swigCPtr, this);
  }

  public long line_offset(long line) throws result {
    return csJNI.sfileinst_line_offset(swigCPtr, this, line);
  }

  public int_pair line_range(long line) throws result {
    return new int_pair(csJNI.sfileinst_line_range(swigCPtr, this, line), true);
  }

  public compunit_line_pair line_to_compunit_line(long ln) throws result {
    return new compunit_line_pair(csJNI.sfileinst_line_to_compunit_line(swigCPtr, this, ln), true);
  }

  public compunit_line_pair line_to_compunit_offset(long ln) throws result {
    return new compunit_line_pair(csJNI.sfileinst_line_to_compunit_offset(swigCPtr, this, ln), true);
  }

  public compunit get_compunit() throws result {
    return new compunit(csJNI.sfileinst_get_compunit(swigCPtr, this), true);
  }

  public sfileinst_children_iterator children() throws result {
    return new sfileinst_children_iterator(csJNI.sfileinst_children(swigCPtr, this), true);
  }

  public sfileinst_vector children_vector() throws result {
    return new sfileinst_vector(csJNI.sfileinst_children_vector(swigCPtr, this), true);
  }

  public sfileinst parent() throws result {
    return new sfileinst(csJNI.sfileinst_parent(swigCPtr, this), true);
  }

  public sfileinst_color_map_iterator color_map_iterator(syntax_kind k, long lowerbound) throws result {
    return new sfileinst_color_map_iterator(csJNI.sfileinst_color_map_iterator__SWIG_0(swigCPtr, this, syntax_kind.getCPtr(k), k, lowerbound), true);
  }

  public sfileinst_color_map_iterator color_map_iterator(syntax_kind k) throws result {
    return new sfileinst_color_map_iterator(csJNI.sfileinst_color_map_iterator__SWIG_1(swigCPtr, this, syntax_kind.getCPtr(k), k), true);
  }

  public line_counts count_lines(long start, long end) throws result {
    return new line_counts(csJNI.sfileinst_count_lines__SWIG_0(swigCPtr, this, start, end), true);
  }

  public line_counts count_lines(long start) throws result {
    return new line_counts(csJNI.sfileinst_count_lines__SWIG_1(swigCPtr, this, start), true);
  }

  public line_counts count_lines() throws result {
    return new line_counts(csJNI.sfileinst_count_lines__SWIG_2(swigCPtr, this), true);
  }

  public sfile get_sfile() throws result {
    return new sfile(csJNI.sfileinst_get_sfile(swigCPtr, this), true);
  }

  public String as_string() throws result {
    return csJNI.sfileinst_as_string(swigCPtr, this);
  }

  public String toString() {
    return csJNI.sfileinst_toString(swigCPtr, this);
  }

}
