/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.grammatech.cs;

public class procedure_metric_function {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected procedure_metric_function(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(procedure_metric_function obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csJNI.delete_procedure_metric_function(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    csJNI.procedure_metric_function_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    csJNI.procedure_metric_function_change_ownership(this, swigCPtr, true);
  }

  protected static long getCPtrAndDisown(procedure_metric_function obj) {
    if (obj != null) obj.swigCMemOwn= false;
    return getCPtr(obj);
  }

  public procedure_metric_function() throws result {
    this(csJNI.new_procedure_metric_function__SWIG_0(), true);
    csJNI.procedure_metric_function_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public procedure_metric_function(procedure_metric_function arg0) throws result {
    this(csJNI.new_procedure_metric_function__SWIG_1(procedure_metric_function.getCPtr(arg0), arg0), true);
    csJNI.procedure_metric_function_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public double evaluate(procedure arg0) throws result {
    return csJNI.procedure_metric_function_evaluate(swigCPtr, this, procedure.getCPtr(arg0), arg0);
  }

}
