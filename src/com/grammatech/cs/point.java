/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.grammatech.cs;

public class point implements Comparable<point> {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected point(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(point obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csJNI.delete_point(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected static long getCPtrAndDisown(point obj) {
    if (obj != null) obj.swigCMemOwn= false;
    return getCPtr(obj);
  }

  public int compareTo(point other) {
    return csJNI.point_compareTo(swigCPtr, this, point.getCPtr(other), other);
  }

  public int hashCode() {
    return csJNI.point_hashCode(swigCPtr, this);
  }

  public boolean equals(point other) throws result {
    return csJNI.point_equals(swigCPtr, this, point.getCPtr(other), other);
  }

  public long id() throws result {
    return csJNI.point_id(swigCPtr, this);
  }

  public point_kind get_kind() throws result {
    return new point_kind(csJNI.point_get_kind(swigCPtr, this), true);
  }

  public point_syntax_kind get_syntax_kind() throws result {
    return new point_syntax_kind(csJNI.point_get_syntax_kind(swigCPtr, this), true);
  }

  public point_syntax_element get_syntax_element() throws result {
    return new point_syntax_element(csJNI.point_get_syntax_element(swigCPtr, this), true);
  }

  public procedure get_procedure() throws result {
    return new procedure(csJNI.point_get_procedure(swigCPtr, this), true);
  }

  public ast get_ast(ast_family fam) throws result {
    return new ast(csJNI.point_get_ast(swigCPtr, this, ast_family.getCPtr(fam), fam), true);
  }

  public void set_ast(ast_family fam, ast val) throws result {
    csJNI.point_set_ast(swigCPtr, this, ast_family.getCPtr(fam), fam, ast.getCPtr(val), val);
  }

  public int_pair_set charpos() throws result {
    return new int_pair_set(csJNI.point_charpos(swigCPtr, this), true);
  }

  public compunit_line_pair compunit_line() throws result {
    return new compunit_line_pair(csJNI.point_compunit_line(swigCPtr, this), true);
  }

  public sfileinst_line_pair file_line() throws result {
    return new sfileinst_line_pair(csJNI.point_file_line(swigCPtr, this), true);
  }

  public String characters(long limit) throws result {
    return csJNI.point_characters__SWIG_0(swigCPtr, this, limit);
  }

  public String characters() throws result {
    return csJNI.point_characters__SWIG_1(swigCPtr, this);
  }

  public symbol declared_symbol() throws result {
    return new symbol(csJNI.point_declared_symbol(swigCPtr, this), true);
  }

  public symbol_set declared_symbols() throws result {
    return new symbol_set(csJNI.point_declared_symbols(swigCPtr, this), true);
  }

  public long rank() throws result {
    return csJNI.point_rank(swigCPtr, this);
  }

  public symbol_set ids_decl_uses() throws result {
    return new symbol_set(csJNI.point_ids_decl_uses(swigCPtr, this), true);
  }

  public symbol_set ids_used() throws result {
    return new symbol_set(csJNI.point_ids_used(swigCPtr, this), true);
  }

  public symbol_set ids_killed() throws result {
    return new symbol_set(csJNI.point_ids_killed(swigCPtr, this), true);
  }

  public symbol_set ids_cond_killed() throws result {
    return new symbol_set(csJNI.point_ids_cond_killed(swigCPtr, this), true);
  }

  public symbol_set actual_points_to() throws result {
    return new symbol_set(csJNI.point_actual_points_to(swigCPtr, this), true);
  }

  public symbol_vector parameter_symbols() throws result {
    return new symbol_vector(csJNI.point_parameter_symbols(swigCPtr, this), true);
  }

  public cfg_edge_set cfg_successors() throws result {
    return new cfg_edge_set(csJNI.point_cfg_successors(swigCPtr, this), true);
  }

  public cfg_edge_set cfg_predecessors() throws result {
    return new cfg_edge_set(csJNI.point_cfg_predecessors(swigCPtr, this), true);
  }

  public cfg_edge_set cfg_inter_targets() throws result {
    return new cfg_edge_set(csJNI.point_cfg_inter_targets(swigCPtr, this), true);
  }

  public cfg_edge_set cfg_inter_sources() throws result {
    return new cfg_edge_set(csJNI.point_cfg_inter_sources(swigCPtr, this), true);
  }

  public cfg_edge_set cfg_targets() throws result {
    return new cfg_edge_set(csJNI.point_cfg_targets(swigCPtr, this), true);
  }

  public cfg_edge_set cfg_sources() throws result {
    return new cfg_edge_set(csJNI.point_cfg_sources(swigCPtr, this), true);
  }

  public basic_block get_basic_block() throws result {
    return new basic_block(csJNI.point_get_basic_block(swigCPtr, this), true);
  }

  public point solitary_cfg_target() throws result {
    return new point(csJNI.point_solitary_cfg_target(swigCPtr, this), true);
  }

  public point solitary_cfg_source() throws result {
    return new point(csJNI.point_solitary_cfg_source(swigCPtr, this), true);
  }

  public pdg_edge_set inter_targets() throws result {
    return new pdg_edge_set(csJNI.point_inter_targets(swigCPtr, this), true);
  }

  public pdg_edge_set inter_sources() throws result {
    return new pdg_edge_set(csJNI.point_inter_sources(swigCPtr, this), true);
  }

  public boolean summary_edge(point to) throws result {
    return csJNI.point_summary_edge(swigCPtr, this, point.getCPtr(to), to);
  }

  public pdg_edge_set intra_targets() throws result {
    return new pdg_edge_set(csJNI.point_intra_targets(swigCPtr, this), true);
  }

  public pdg_edge_set intra_sources() throws result {
    return new pdg_edge_set(csJNI.point_intra_sources(swigCPtr, this), true);
  }

  public point_set actual_to_formals() throws result {
    return new point_set(csJNI.point_actual_to_formals(swigCPtr, this), true);
  }

  public point_set actuals_in() throws result {
    return new point_set(csJNI.point_actuals_in(swigCPtr, this), true);
  }

  public point_set actuals_out() throws result {
    return new point_set(csJNI.point_actuals_out(swigCPtr, this), true);
  }

  public void set_actual_outs(point_vector ao_vertices) throws result {
    csJNI.point_set_actual_outs(swigCPtr, this, point_vector.getCPtr(ao_vertices), ao_vertices);
  }

  public void set_actual_ins(point_vector ai_vertices) throws result {
    csJNI.point_set_actual_ins(swigCPtr, this, point_vector.getCPtr(ai_vertices), ai_vertices);
  }

  public point_vector actuals_in_as_list() throws result {
    return new point_vector(csJNI.point_actuals_in_as_list(swigCPtr, this), true);
  }

  public point_vector actuals_out_as_list() throws result {
    return new point_vector(csJNI.point_actuals_out_as_list(swigCPtr, this), true);
  }

  public point actual_in(long _rank) throws result {
    return new point(csJNI.point_actual_in(swigCPtr, this, _rank), true);
  }

  public point actual_out(long _rank) throws result {
    return new point(csJNI.point_actual_out(swigCPtr, this, _rank), true);
  }

  public point call_site() throws result {
    return new point(csJNI.point_call_site(swigCPtr, this), true);
  }

  public procedure callee() throws result {
    return new procedure(csJNI.point_callee(swigCPtr, this), true);
  }

  public point normal_return() throws result {
    return new point(csJNI.point_normal_return(swigCPtr, this), true);
  }

  public exceptional_return_vector exceptional_returns() throws result {
    return new exceptional_return_vector(csJNI.point_exceptional_returns(swigCPtr, this), true);
  }

  public labeled_pdg_edge_set labeled_intra_control_sources() throws result {
    return new labeled_pdg_edge_set(csJNI.point_labeled_intra_control_sources(swigCPtr, this), true);
  }

  public labeled_pdg_edge_set labeled_intra_control_targets() throws result {
    return new labeled_pdg_edge_set(csJNI.point_labeled_intra_control_targets(swigCPtr, this), true);
  }

  public boolean is_inside_macro() throws result {
    return csJNI.point_is_inside_macro(swigCPtr, this);
  }

  public String source_pp() throws result {
    return csJNI.point_source_pp(swigCPtr, this);
  }

  public java.math.BigInteger condition_number() throws result {
    return csJNI.point_condition_number(swigCPtr, this);
  }

  public String as_string() throws result {
    return csJNI.point_as_string(swigCPtr, this);
  }

  public String toString() {
    return csJNI.point_toString(swigCPtr, this);
  }

  public java.math.BigInteger get_address() throws result {
    return csJNI.point_get_address(swigCPtr, this);
  }

  public java.math.BigInteger get_affiliated_address() throws result {
    return csJNI.point_get_affiliated_address(swigCPtr, this);
  }

}
