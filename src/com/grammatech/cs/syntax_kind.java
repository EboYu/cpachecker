/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.grammatech.cs;

public class syntax_kind implements Comparable<syntax_kind> {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected syntax_kind(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(syntax_kind obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        csJNI.delete_syntax_kind(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected static long getCPtrAndDisown(syntax_kind obj) {
    if (obj != null) obj.swigCMemOwn= false;
    return getCPtr(obj);
  }

  public syntax_kind(long _inner) throws result {
    this(csJNI.new_syntax_kind(_inner), true);
  }

  public int compareTo(syntax_kind other) {
    return csJNI.syntax_kind_compareTo(swigCPtr, this, syntax_kind.getCPtr(other), other);
  }

  public boolean equals(syntax_kind other) throws result {
    return csJNI.syntax_kind_equals(swigCPtr, this, syntax_kind.getCPtr(other), other);
  }

  public int hashCode() {
    return csJNI.syntax_kind_hashCode(swigCPtr, this);
  }

  public String as_string() throws result {
    return csJNI.syntax_kind_as_string(swigCPtr, this);
  }

  public String toString() {
    return csJNI.syntax_kind_toString(swigCPtr, this);
  }

  public String name() throws result {
    return csJNI.syntax_kind_name(swigCPtr, this);
  }

  public static syntax_kind getCOMMENT() throws result {
    long cPtr = csJNI.syntax_kind_COMMENT_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

  public static syntax_kind getMACRO() throws result {
    long cPtr = csJNI.syntax_kind_MACRO_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

  public static syntax_kind getPREPROCESSOR() throws result {
    long cPtr = csJNI.syntax_kind_PREPROCESSOR_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

  public static syntax_kind getINCLUDE() throws result {
    long cPtr = csJNI.syntax_kind_INCLUDE_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

  public static syntax_kind getKEYWORD() throws result {
    long cPtr = csJNI.syntax_kind_KEYWORD_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

  public static syntax_kind getOPCODE() throws result {
    long cPtr = csJNI.syntax_kind_OPCODE_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

  public static syntax_kind getLABEL() throws result {
    long cPtr = csJNI.syntax_kind_LABEL_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

  public static syntax_kind getGRAYOUT() throws result {
    long cPtr = csJNI.syntax_kind_GRAYOUT_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

  public static syntax_kind getSTRING() throws result {
    long cPtr = csJNI.syntax_kind_STRING_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

  public static syntax_kind getINCLUDE_DIRECTIVE() throws result {
    long cPtr = csJNI.syntax_kind_INCLUDE_DIRECTIVE_get();
    return (cPtr == 0) ? null : new syntax_kind(cPtr, false);
  }

}
